name: build

on:
  push:
    branches: [ master ]

jobs:
  setup-outputs:
    runs-on: windows-latest
    outputs:
      body: ${{ steps.body.outputs.body }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false
      - id: extract_changelog
        name: Extract information from CHANGELOG.md
        shell: bash
        run: |
          res=$''
          while read -r line; do    
            if [[ "$line" =~ ^##[[:space:]][[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
              if [ -z "$version" ]; then
                version=${line:2}
              else
                break
              fi
            else
              if [ ! -z "$version" ]; then
                res+="${line//\r@Q}\n"
              fi
            fi
          done < CHANGELOG.md
          echo -e "version=$version" >> $GITHUB_OUTPUT
          echo -e "body=$res" >> $GITHUB_OUTPUT  

  deploy:
    runs-on: windows-latest
    needs: setup-outputs
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M')"
      
      - run: vcpkg integrate install

      - uses: ilammy/msvc-dev-cmd@v1.10.0
        with:
          arch: x86

      - name: Compile FLHook
        run: msbuild.exe "${env:GITHUB_WORKSPACE}\project\FLHook.sln" /t:Build /p:Configuration=Release /p:Platform=Win32

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: "${{ needs.setup-outputs.outputs.version }} | ${{ steps.date.outputs.date }}"
          body: |
            "${{ needs.setup-outputs.body }}"
          draft: false
          prerelease: false
      
      - name: Remove .pdb files
        run: |
          del /S *.pdb
        shell: cmd

      - name: Remove template .dll
        run: |
          del /S $safeprojectname$.dll
        shell: cmd

      - name: Zip dlls
        run: |
          powershell Compress-Archive -Path .\dist\Release -DestinationPath .\Release.zip

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./Release.zip
          asset_name: Release.zip
          asset_content_type: application/zip

      